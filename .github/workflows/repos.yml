name: Check for New Repositories

on:
  push:
    branches:
      - main  # Adjust this according to your default branch

jobs:
  check_for_new_repos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Extract intersphinx_mapping
        id: extract_mapping
        run: |
          filtered_mapping=$(python -c '
          with open("source/conf.py", "r") as f:
            conf_content = f.read()
            
          # Find the start and end of the intersphinx_mapping block
          start_idx = conf_content.find("intersphinx_mapping")
          end_idx = conf_content.find("}", start_idx)
          
          # Extract the block
          mapping_block = conf_content[start_idx:end_idx+1]
          print(mapping_block)
          
          # Find the start and end of the dictionary
          start_idx = mapping_block.find("{")
          end_idx = mapping_block.rfind("}")

          # Extract the dictionary part
          dictionary_string = mapping_block[start_idx:end_idx + 1]

          # Parse the dictionary string
          mapping_dict = eval(dictionary_string)

          # Extract keys from the dictionary
          keys = list(mapping_dict.keys())
          
          # Split the block into lines and remove the line containing intersphinx_mapping
          lines = mapping_block.split("\\n")
          filtered_lines = [line.strip() for line in lines if "intersphinx_mapping" not in line]
          # print(filtered_lines)
          # Join the lines back together and print
          filtered_mapping = "\\n".join(filtered_lines)
          ')
          echo "$filtered_mapping"

        
        
      
      - name: List Repositories
        id: list_repos
        uses: actions/github-script@v4
        with:
          script: |
            const response = await github.repos.listForOrg({
              org: 'salt-extensions',
              per_page: 100
            });
            return response.data.map(repo => repo.name);

      - name: Debug Intersphinx Mapping
        run: |
          echo "Intersphinx Mapping: ${{ steps.extract_mapping.outputs.filtered_mapping }}"
      
      - name: Debug Repos
        run: |
          echo "Repos: ${{ steps.list_repos.outputs.result }}"    

      - name: Compare Repositories
        run: |
          for repo in ${{ steps.list_repos.outputs.result }}; do
          if ! echo "${{ steps.extract_mapping.outputs.filtered_mapping }}" | grep -q "$repo"; then
          echo "Repository $repo is missing from Intersphinx Mapping."
          fi
          done
